Coverage.py measures code coverage, typically during test execution. It uses the code analysis
tools and tracing hooks provided in the Python standard library to determine which lines are executable,
and which have been executed.

https://stackoverflow.com/questions/36517137/how-to-properly-use-coverage-py-in-python

Runs all:
py.test --cov
coverage html

With no unit tests:
coverage run test_pytest1.py
coverage combine
coverage report -m
coverage html
##########################
Py.test on its own does not create one. You need py.test plugin for coverage:

https://bytes.com/topic/python/answers/43330-unittest-vs-py-test

py test:
py.test -s test_pytest1.py
py.test -v test_pytest1.py  (with verbose)
##########################
Convention
Name my test modules/files starting with ‘test_’.
Name my test functions starting with ‘test_’.
Name my test classes starting with ‘Test’.
Name my test methods starting with ‘test_’.
Make sure all packages with test code have an ‘init.py’ file.
##########################
pyunit
discovery mode:
python -m unittest discover -v
run by class:
python -m unittest -q test_pyunit1.Test_EqualsNT
